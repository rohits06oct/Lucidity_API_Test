Test Case ID,Test Case Name,API Endpoint,Input Data,Expected Outcome,Actual Outcome,
1,Add Flat X Amount Offer,POST /api/v1/offer,"Valid restaurant_id, FLATX type, Offer value: 10, Customer segment: p1",Success,Offer added successfully,
2,Add Flat X% Offer,POST /api/v1/offer,"Valid restaurant_id, FLATP type, Offer value: 10, Customer segment: p2",Success,Offer added successfully,
3,Apply Flat X Amount Offer,POST /api/v1/cart/apply_offer,"Valid cart_value: 200, user_id: 1, restaurant_id: 1, Offer applied: FLATX",Success,Reduced cart_value by 10,
4,Apply Flat X% Offer,POST /api/v1/cart/apply_offer,"Valid cart_value: 200, user_id: 2, restaurant_id: 2, Offer applied: FLATP",Success,Reduced cart_value by 10%,
5,Apply Offer Without Adding,POST /api/v1/cart/apply_offer,"Valid cart_value: 200, user_id: 3, restaurant_id: 3",Failure,No offer available,
6,Check User Segment Mock Response,GET /api/v1/user_segment?user_id=1,Valid user_id: 1,Success,Response: { 'segment': 'p1' },
7,Check User Segment Not Found,GET /api/v1/user_segment?user_id=999,Non-existing user_id,Failure,User segment not found,
8,Apply Offer For Another Segment,POST /api/v1/cart/apply_offer,"Valid cart_value: 300, user_id: 3, restaurant_id: 3, Segment: p3",Success,Appropriate offer applied,
9,Apply Multiple Offers,POST /api/v1/cart/apply_offer,Apply both FLATX and FLATP offers for user_id: 1,Failure,Only one offer applicable at a time,
